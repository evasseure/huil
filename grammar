statements: statement+

statement:
    | compound_stmt
    | simple_stmts 

simple_stmts: simple_stmt NEWLINE

simple_stmt:
    | declaration
    | assignment
    | expression

compound_stmt:
    | function_def
    | if_stmt
    | match_stmt

declaration: 'let' ID ['=' expression]

assignment: ID '=' expression

function_def: 'fn' ID '(' [ID (',' | ID)*] ')' ':' block

if_stmt:
    | 'if' expression ':' block elif_stmt
    | 'if' expression ':' block [else_stmt]

elif_stmt:
    | 'elif' expression ':' block elif_stmt
    | 'elif' expression ':' block [else_stmt]

else_stmt: 'else' ':' block

match_stmt: 'match' expression ':' NEWLINE INDENT (match)+ DEDENT

match: '|' (expression | '*') '->' expression

block: NEWLINE INDENT statements DEDENT 

expression:
    | term
    | expression '+' term
    | expression '-' term
    | expression '>' term
    | expression '>=' term
    | expression '<' term
    | expression '<=' term
    | expression '==' term
    | '!' term // NOT IMPLEMENTED YET
    | expression 'or' term
    | expression 'and' term

term:
    | factor
    | term '*' factor 
    | term '/' factor 
    | term '//' factor 
    | term '%' factor 

factor:
    | primary
    | '+' factor 
    | '-' factor 

primary:
    | atom
    | ID '(' [expression (',' | expression)*] ')'

atom:
    | ID
    | INTEGER
    | FLOAT
    | STRING
    | 'true'
    | 'false'
    | None // NOT IMPLEMENTED YET
    | '(' expression ')'

